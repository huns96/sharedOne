<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sharedOne.mapper.PriceMapper">

    <select id="getProductList" resultType="com.sharedOne.domain.ProductDto">
        SELECT
        product_code, name
        FROM product
        WHERE delyn = 'N'
        <if test="type == 'product_code'">
            AND product_code LIKE #{value}
        </if>
        <if test="type == 'product_name'">
            AND name LIKE #{value}
        </if>
    </select>


    <select id="nameSearchProduct" resultType="com.sharedOne.domain.ProductDto">
        SELECT
        product_code,
        name
        FROM product
        WHERE
        name LIKE #{keyword}
    </select>

    <select id="codeSearchProduct" resultType="com.sharedOne.domain.ProductDto">
        SELECT
        product_code,
        name
        FROM product
        WHERE
        product_code LIKE #{keyword}
    </select>

    <select id="nameSearchBuyer" resultType="com.sharedOne.domain.BuyerDto">
        SELECT
        buyer_code,
        name
        FROM buyer
        WHERE
        name LIKE #{keyword}
    </select>


    <select id="codeSearchBuyer" resultType="com.sharedOne.domain.BuyerDto">
        SELECT
        buyer_code,
        name
        FROM buyer
        WHERE
        buyer_code LIKE #{keyword}
    </select>



    <select id="listBuyer" resultType="com.sharedOne.domain.BuyerDto">
        SELECT
        buyer_code,
        name
        FROM buyer
        WHERE delyn="N" AND
        (<trim prefixOverrides="OR">
        <if test="type == 'all' or type == 'buyer_code'">
            OR buyer_code LIKE #{keyword}
        </if>
        <if test="type == 'all' or type == 'name'">
            OR name LIKE #{keyword}
        </if>
    </trim>);
        <!--        LIMIT #{offset}, #{records};-->


    </select>

    <select id="listProduct" resultType="com.sharedOne.domain.ProductDto">
        SELECT
        product_code,
        name
        FROM product
        WHERE delyn="N" AND
        (<trim prefixOverrides="OR">
        <if test="type == 'all' or type == 'product_code'">
            OR product_code LIKE #{keyword}
        </if>
        <if test="type == 'all' or type == 'name'">
            OR name LIKE #{keyword}
        </if>
    </trim>);
        <!--        LIMIT #{offset}, #{records};-->

    </select>

    <update id="removePrices">
        UPDATE price
        SET
        delyn = "Y",
        upduser = "user"
        WHERE
        num = #{num};
    </update>

    <update id="remove">
        UPDATE price
        SET
        delyn = "Y",
        upduser = "user"
        WHERE
        num = #{num};
    </update>

    <update id="update">
        UPDATE price
        SET
        buyer_code = #{buyer_code},
        product_code = #{product_code},
        price = #{price},
        start_date = #{start_date},
        end_date = #{end_date},
        currency = #{currency},
        upduser = "user"
        WHERE
        num = #{num};
    </update>

    <select id="selectPrice" resultType="com.sharedOne.domain.PriceDto">
        SELECT * FROM price
    </select>


    <select id="countAll" resultType="int">
        SELECT COUNT(*)
        FROM price LEFT JOIN buyer ON price.buyer_code = buyer.buyer_code
        LEFT JOIN product ON price.product_code = product.product_code
        WHERE price.delyn="N" AND buyer.delyn="N" AND product.delyn="N"
    </select>

    <select id="buyerCountAll" resultType="int">
        SELECT COUNT(*)
        FROM buyer
        WHERE delyn="N";
    </select>

    <select id="productCountAll" resultType="int">
        SELECT COUNT(*)
        FROM product
        WHERE delyn="N";
    </select>


    <select id="findPriceByNum" resultType="com.sharedOne.domain.PriceDto">
        SELECT
        price.num,
        price.buyer_code,
        price.product_code,
        price.price,
        price.currency,
        price.start_date,
        price.end_date,
        price.delyn,
        price.adduser,
        price.adddate,
        price.upduser,
        price.upddate,
        buyer.name buyer_name,
        product.name product_name
        FROM price LEFT JOIN buyer ON price.buyer_code = buyer.buyer_code
        LEFT JOIN product ON price.product_code = product.product_code
        WHERE price.num = #{num};
    </select>


    <select id="listPrice" resultType="com.sharedOne.domain.PriceDto">
        SELECT
        price.num,
        price.buyer_code,
        price.product_code,
        price.price,
        price.currency,
        price.start_date,
        price.end_date,
        price.delyn,
        price.adduser,
        price.adddate,
        price.upduser,
        price.upddate,
        buyer.name buyer_name,
        product.name product_name
        FROM price LEFT JOIN buyer ON price.buyer_code = buyer.buyer_code
        LEFT JOIN product ON price.product_code = product.product_code
        WHERE price.delyn="N"  AND buyer.delyn="N" AND product.delyn="N"
        AND
        (<trim prefixOverrides="OR">
        <if test="buyerType == 'all' or buyerType == 'buyer_code'">
            OR price.buyer_code LIKE #{buyerKeyword}
        </if>
        <if test="buyerType == 'all' or buyerType == 'buyer_name'">
            OR buyer.name LIKE #{buyerKeyword}
        </if>
    </trim>)
        AND
        (<trim prefixOverrides="OR">
        <if test="productType == 'all' or productType == 'product_code'">
            OR price.product_code LIKE #{productKeyword}
        </if>
        <if test="productType == 'all' or productType == 'product_name'">
            OR product.name LIKE #{productKeyword}
        </if>
    </trim>)
        ORDER BY IFNULL(price.upddate, price.adddate) DESC, adddate DESC
        LIMIT #{offset}, #{records};
    </select>

    <insert id="insert">
        INSERT INTO price (buyer_code, product_code, price, start_date, end_date, currency, adduser)
        VALUES (#{buyer_code}, #{product_code}, #{price}, #{start_date} , #{end_date}, #{currency}, #{adduser})
    </insert>


    <select id="dateCheck" resultType="int">
        SELECT COUNT(*)
        FROM price
        WHERE buyer_code = #{buyer_code} AND product_code = #{product_code}
        AND ((#{start_date} BETWEEN start_date AND end_date)
        OR (#{end_date} BETWEEN start_date AND end_date))
        AND num != #{num};
    </select>

</mapper>
